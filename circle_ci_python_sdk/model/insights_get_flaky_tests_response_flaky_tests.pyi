# coding: utf-8

"""
    CircleCI API

    This describes the resources that make up the CircleCI API v2.

    The version of the OpenAPI document: v2
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from circle_ci_python_sdk import schemas  # noqa: F401


class InsightsGetFlakyTestsResponseFlakyTests(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)

    A list of all instances of flakes. Note that a test is no longer considered flaky after 2 weeks have passed without a flake. Each flake resets this timer.
    """


    class MetaOapg:
        
        @staticmethod
        def items() -> typing.Type['InsightsGetFlakyTestsResponseFlakyTestsItem']:
            return InsightsGetFlakyTestsResponseFlakyTestsItem

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple['InsightsGetFlakyTestsResponseFlakyTestsItem'], typing.List['InsightsGetFlakyTestsResponseFlakyTestsItem']],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'InsightsGetFlakyTestsResponseFlakyTests':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> 'InsightsGetFlakyTestsResponseFlakyTestsItem':
        return super().__getitem__(i)

from circle_ci_python_sdk.model.insights_get_flaky_tests_response_flaky_tests_item import InsightsGetFlakyTestsResponseFlakyTestsItem
