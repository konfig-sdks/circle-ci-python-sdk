# coding: utf-8

"""
    CircleCI API

    This describes the resources that make up the CircleCI API v2.

    The version of the OpenAPI document: v2
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from circle_ci_python_sdk import schemas  # noqa: F401


class ScheduleUpdateScheduleRequestTimetableDaysOfWeek(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)

    Days in a week in which the schedule triggers.
    """


    class MetaOapg:
        
        
        class items(
            schemas.EnumBase,
            schemas.StrSchema
        ):
        
        
            class MetaOapg:
                enum_value_to_name = {
                    "TUE": "TUE",
                    "SAT": "SAT",
                    "SUN": "SUN",
                    "MON": "MON",
                    "THU": "THU",
                    "WED": "WED",
                    "FRI": "FRI",
                }
            
            @schemas.classproperty
            def TUE(cls):
                return cls("TUE")
            
            @schemas.classproperty
            def SAT(cls):
                return cls("SAT")
            
            @schemas.classproperty
            def SUN(cls):
                return cls("SUN")
            
            @schemas.classproperty
            def MON(cls):
                return cls("MON")
            
            @schemas.classproperty
            def THU(cls):
                return cls("THU")
            
            @schemas.classproperty
            def WED(cls):
                return cls("WED")
            
            @schemas.classproperty
            def FRI(cls):
                return cls("FRI")

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ScheduleUpdateScheduleRequestTimetableDaysOfWeek':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
