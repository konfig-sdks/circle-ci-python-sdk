# coding: utf-8

"""
    CircleCI API

    This describes the resources that make up the CircleCI API v2.

    The version of the OpenAPI document: v2
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from circle_ci_python_sdk import schemas  # noqa: F401


class InsightsGetJobTimeseriesDataResponseItemsItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "min_started_at",
            "max_ended_at",
            "name",
            "metrics",
            "timestamp",
        }
        
        class properties:
            name = schemas.StrSchema
            min_started_at = schemas.DateTimeSchema
            max_ended_at = schemas.DateTimeSchema
            timestamp = schemas.DateTimeSchema
        
            @staticmethod
            def metrics() -> typing.Type['InsightsGetJobTimeseriesDataResponseItemsItemMetrics']:
                return InsightsGetJobTimeseriesDataResponseItemsItemMetrics
            __annotations__ = {
                "name": name,
                "min_started_at": min_started_at,
                "max_ended_at": max_ended_at,
                "timestamp": timestamp,
                "metrics": metrics,
            }
    
    min_started_at: MetaOapg.properties.min_started_at
    max_ended_at: MetaOapg.properties.max_ended_at
    name: MetaOapg.properties.name
    metrics: 'InsightsGetJobTimeseriesDataResponseItemsItemMetrics'
    timestamp: MetaOapg.properties.timestamp
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["min_started_at"]) -> MetaOapg.properties.min_started_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["max_ended_at"]) -> MetaOapg.properties.max_ended_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["metrics"]) -> 'InsightsGetJobTimeseriesDataResponseItemsItemMetrics': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "min_started_at", "max_ended_at", "timestamp", "metrics", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["min_started_at"]) -> MetaOapg.properties.min_started_at: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["max_ended_at"]) -> MetaOapg.properties.max_ended_at: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["metrics"]) -> 'InsightsGetJobTimeseriesDataResponseItemsItemMetrics': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "min_started_at", "max_ended_at", "timestamp", "metrics", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        min_started_at: typing.Union[MetaOapg.properties.min_started_at, str, datetime, ],
        max_ended_at: typing.Union[MetaOapg.properties.max_ended_at, str, datetime, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        metrics: 'InsightsGetJobTimeseriesDataResponseItemsItemMetrics',
        timestamp: typing.Union[MetaOapg.properties.timestamp, str, datetime, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'InsightsGetJobTimeseriesDataResponseItemsItem':
        return super().__new__(
            cls,
            *args,
            min_started_at=min_started_at,
            max_ended_at=max_ended_at,
            name=name,
            metrics=metrics,
            timestamp=timestamp,
            _configuration=_configuration,
            **kwargs,
        )

from circle_ci_python_sdk.model.insights_get_job_timeseries_data_response_items_item_metrics import InsightsGetJobTimeseriesDataResponseItemsItemMetrics
