# coding: utf-8

"""
    CircleCI API

    This describes the resources that make up the CircleCI API v2.

    The version of the OpenAPI document: v2
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from circle_ci_python_sdk import schemas  # noqa: F401


class ScheduleUpdateScheduleRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The parameters for an update schedule request
    """


    class MetaOapg:
        
        class properties:
            description = schemas.StrSchema
        
            @staticmethod
            def parameters() -> typing.Type['ScheduleUpdateScheduleRequestParameters']:
                return ScheduleUpdateScheduleRequestParameters
            name = schemas.StrSchema
        
            @staticmethod
            def timetable() -> typing.Type['ScheduleUpdateScheduleRequestTimetable']:
                return ScheduleUpdateScheduleRequestTimetable
            
            
            class attribution_actor(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def CURRENT(cls):
                    return cls("current")
                
                @schemas.classproperty
                def SYSTEM(cls):
                    return cls("system")
            __annotations__ = {
                "description": description,
                "parameters": parameters,
                "name": name,
                "timetable": timetable,
                "attribution-actor": attribution_actor,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parameters"]) -> 'ScheduleUpdateScheduleRequestParameters': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timetable"]) -> 'ScheduleUpdateScheduleRequestTimetable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attribution-actor"]) -> MetaOapg.properties.attribution_actor: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "parameters", "name", "timetable", "attribution-actor", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parameters"]) -> typing.Union['ScheduleUpdateScheduleRequestParameters', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timetable"]) -> typing.Union['ScheduleUpdateScheduleRequestTimetable', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attribution-actor"]) -> typing.Union[MetaOapg.properties.attribution_actor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "parameters", "name", "timetable", "attribution-actor", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        parameters: typing.Union['ScheduleUpdateScheduleRequestParameters', schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        timetable: typing.Union['ScheduleUpdateScheduleRequestTimetable', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ScheduleUpdateScheduleRequest':
        return super().__new__(
            cls,
            *args,
            description=description,
            parameters=parameters,
            name=name,
            timetable=timetable,
            _configuration=_configuration,
            **kwargs,
        )

from circle_ci_python_sdk.model.schedule_update_schedule_request_parameters import ScheduleUpdateScheduleRequestParameters
from circle_ci_python_sdk.model.schedule_update_schedule_request_timetable import ScheduleUpdateScheduleRequestTimetable
