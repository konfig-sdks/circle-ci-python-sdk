# coding: utf-8

"""
    CircleCI API

    This describes the resources that make up the CircleCI API v2.

    The version of the OpenAPI document: v2
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class InsightsGetFlakyTestsResponseFlakyTestsItem(BaseModel):
    # The date and time when workflow was created.
    workflow-created-at_: str = Field(alias='workflow-created-at')

    # The ID of the workflow associated with the provided test counts
    workflow-id_: typing.Union[bool, date, datetime, dict, float, int, list, str, None] = Field(alias='workflow-id')

    # The class the test belongs to.
    classname: typing.Optional[str] = Field(alias='classname')

    # The number of the pipeline.
    pipeline-number_: typing.Union[bool, date, datetime, dict, float, int, list, str, None] = Field(alias='pipeline-number')

    # The name of the workflow.
    workflow-name_: str = Field(alias='workflow-name')

    # The name of the test.
    test-name_: str = Field(alias='test-name')

    # The name of the job.
    job-name_: str = Field(alias='job-name')

    # The number of the job.
    job-number_: typing.Union[bool, date, datetime, dict, float, int, list, str, None] = Field(alias='job-number')

    # The number of times the test flaked.
    times-flaked_: int = Field(alias='times-flaked')

    # The source of the test.
    source: typing.Optional[str] = Field(alias='source')

    # The file the test belongs to.
    file: typing.Optional[str] = Field(alias='file')

    time-wasted_: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='time-wasted')
    class Config:
        arbitrary_types_allowed = True
